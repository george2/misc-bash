#!/bin/bash
# Grabs nonsense from the thinkgeek fortunes page, and converts it into 
# linux 'fortune' format, for no apparent reason.
# depends=('convmv' 'fortune-mod' 'hd2u')
# (In other words, this script needs convmv, strfile, and dos2unix)
# You also need a few other thinkgs, like ed, sed, bc, fold, and wget.

# settings
db='thinkgeek'       # thinkgeek fortunes db to write to. will cp to /usr/share/fortune/
fdb="`pwd`/$db"      # full path to the db - read code before changing
sleep='0'            # time to sleep before fetching another fortune

# internal vars - don't change unless you're adapting this to some other page
url='http://www.thinkgeek.com/brain/fortune.cgi'
stquot='<blockquote>'
enquot='<\/blockquote>'

getfortune() {  # get a fortune
  echo "$(wget -O- "$url" 2>/dev/null | sed -n "/$stquot/,/$enquot/p" | sed "s/$stquot//g; s/$enquot//g; ")"
}

convfortune() {  # get rid of html, convert fortunes to the right format
  local fortune="$(echo "$@" | sed "s/&#39;/'/g; s/<[bBrR]*>//g; s/&gt;/>/g; s/&lt;/</g; s/&quot;/\"/g; s/&#151;/--/g; s/&copy;/p/g; s/&thorn;/P/g; s/&nbsp;/ /g; s/&#146;/'/g; s/&amp;/\&/g; s/&frac12/1\/2/g; s/^$/\n/g" | fold -sw75)"
  local flen="$(echo "$fortune" | wc -l)"
  echo "$(echo "$fortune" | tail -$(echo $flen-1|bc))"
}

isindb() {  # see if the fortune is already in our database
  grep -q "$(echo % $@ %)" <<< $(cat "$db") # magic...  ;)
}

writefortune() {  # add the fortune to the db
  echo %"$@" >> "$db"
}

finally() {  # make the fortunes db ready to go
  echo
  convmv -f utf8 -t ascii --notest "$db"
  dos2unix "$db"
  grep -q % <<< $(head -1 "$db") && ed -s "$db" << EOF
  1d
  wq
EOF
  [[ -e "/usr/share/fortune/$(basename "$db")" ]] && sudo /bin/rm "/usr/share/fortune/$(basename "$db")"
  sudo /bin/cp -f "$fdb" "/usr/share/fortune/$(basename "$db")"
  sudo strfile "/usr/share/fortune/$(basename "$db")"
  echo "You can test the results with: fortune $(basename "$db")"
  exit
}

main() {
  touch "$db" || exit 1
  trap finally INT HUP ABRT QUIT ALRM TERM
  while true; do
    fortune="$(convfortune "$(getfortune)")"
    isindb "$fortune" || writefortune "$fortune"
    [[ $sleep == 0 ]] || sleep $sleep
  done
}

main
